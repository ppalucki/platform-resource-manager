# @Scenario LLC contention:
# 3 redis instances;
# 3 twemcached instances (one big instance with big workload, other two relatively small);
# start cassandra service but no workload to train the model;
# start the cassandra stressor to test the model for cache contention.

application_hosts:
  vars:
    workloads:
      specjbb:
        jbb1:
          count: 1
          slo: 26000000
          communication_port: 42000
          backend:
            count: 1
            resources: {'cpu': 1, 'ram': 20, 'disk': 10}
          injector:
            count: 1
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
          controller:
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
        jbb2:
          count: 1
          slo: 26000000
          communication_port: 42001
          backend:
            count: 1
            resources: {'cpu': 1, 'ram': 20, 'disk': 10}
          injector:
            count: 1
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
          controller:
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
        jbb3:
          count: 1
          slo: 26000000
          communication_port: 42002
          backend:
            count: 1
            resources: {'cpu': 1, 'ram': 20, 'disk': 10}
          injector:
            count: 1
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
          controller:
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
 
      tensorflow_benchmark_train:
        default:
          count: 1
          slo: 0.03
          resources: {'cpu': 10, 'ram': 10, 'disk': 10}
      tensorflow_benchmark_prediction:
        small:
          labels: {'type': 'best_efforts'}
          #launch small only
          count: 1
          slo: 0.03
          resources: {'cpu': 5, 'ram': 50, 'disk': 50}
        big:
          labels: {'type': 'best_efforts'}
          count: 0
          slo: 0.03
          resources: {'cpu': 20, 'ram': 10, 'disk': 10}
      cassandra_stress:
        low:
          labels: {'type': 'best_efforts'}
          count: 1
          communication_port: 9142
          storage_port: 7100
          jmx_port: 7299
          slo: 1000
          cassandra:
            image_name: cassandra
            image_tag: 3.11.3
            resources: {'cpu': 5, 'ram': 50, 'disk': 50}
          cassandra_stress:
            env:
              threads: 8
              #qps: @TODO in cassandra_stress.aurora
            resources: {'cpu': 8, 'ram': 20, 'disk': 50}

      stress_ng:
        default:
          count: 6
          timeout: 30
          stressor: stream
          number_workers: 2
          resources:
            cpu: 1
            ram: 1
            disk: 1
